--Ejercicio 1, consultas con anidamiento (usando IN, NOT IN, EXISTS, NOT EXISTS):

--1.1)Listar todas las películas que poseen entregas de películas de idioma inglés durante el año 2006. (P)

SELECT p.titulo,p.idioma
FROM unc_esq_peliculas.pelicula p
WHERE p.codigo_pelicula IN (SELECT r.codigo_pelicula
                            FROM unc_esq_peliculas.renglon_entrega r
                            WHERE r.nro_entrega IN (
                                SELECT e.nro_entrega
                                FROM unc_esq_peliculas.entrega e
                                WHERE extract(YEAR FROM e.fecha_entrega) = 2006)) AND p.idioma LIKE '%Inglés%'
ORDER BY p.titulo ASC;


SELECT DISTINCT p.titulo, p.idioma
FROM unc_esq_peliculas.pelicula p
    INNER JOIN unc_esq_peliculas.renglon_entrega re ON p.codigo_pelicula = re.codigo_pelicula
    INNER JOIN unc_esq_peliculas.entrega e ON re.nro_entrega = e.nro_entrega
WHERE  (extract(YEAR FROM e.fecha_entrega) = 2006) AND p.idioma LIKE '%Inglés%'
ORDER BY p.titulo ASC;
--Le pongo el distinct porque hay 2 peliculas repetidas

--1.2)Indicar la cantidad de películas que han sido entregadas en 2006 por un distribuidor nacional. Trate de resolverlo utilizando ensambles.(P)

SELECT p.titulo, d.tipo
FROM unc_esq_peliculas.pelicula p
    INNER JOIN unc_esq_peliculas.renglon_entrega re ON p.codigo_pelicula = re.codigo_pelicula
    INNER JOIN unc_esq_peliculas.entrega e ON re.nro_entrega = e.nro_entrega
    INNER JOIN unc_esq_peliculas.distribuidor d ON e.id_distribuidor = d.id_distribuidor
WHERE (extract(YEAR FROM e.fecha_entrega) = 2006) AND d.tipo LIKE '%N';

--1.3)Indicar los departamentos que no posean empleados cuya diferencia de sueldo máximo y mínimo (asociado a la tarea que realiza) no supere el 40% del sueldo máximo.
--    (P) (Probar con 10% para que retorne valores)

SELECT d.id_distribuidor, d.id_departamento, d.nombre
FROM unc_esq_peliculas.departamento d
WHERE (d.id_distribuidor, d.id_departamento) NOT IN (
              SELECT e.id_distribuidor, e.id_departamento
              FROM unc_esq_peliculas.empleado e
                  JOIN unc_esq_peliculas.tarea t ON (e.id_tarea = t.id_tarea)
              WHERE (t.sueldo_maximo - t.sueldo_minimo) <= (t.sueldo_maximo * 0.1));

--1.4) Liste las películas que nunca han sido entregadas por un distribuidor nacional.(P)

SELECT p.titulo, d.tipo
FROM unc_esq_peliculas.pelicula p
    INNER JOIN unc_esq_peliculas.renglon_entrega re ON p.codigo_pelicula = re.codigo_pelicula
    INNER JOIN unc_esq_peliculas.entrega e ON re.nro_entrega = e.nro_entrega
    INNER JOIN unc_esq_peliculas.distribuidor d ON e.id_distribuidor = d.id_distribuidor
WHERE d.tipo NOT LIKE '%N%';

--1.5) Determinar los jefes que poseen personal a cargo y cuyos departamentos (los del jefe) se encuentren en la Argentina.

SELECT count(d.jefe_departamento)
FROM unc_esq_peliculas.departamento d
    INNER JOIN unc_esq_peliculas.ciudad c ON c.id_ciudad = d.id_ciudad
    INNER JOIN unc_esq_peliculas.pais p ON c.id_pais = p.id_pais
WHERE p.nombre_pais = 'ARGENTINA';

--1.6) Liste el apellido y nombre de los empleados que pertenecen a aquellos departamentos de Argentina y donde el jefe de departamento posee una comisión de más
--     del 10% de la que posee su empleado a cargo.

SELECT e.nombre, e.apellido, e.id_departamento, e.id_distribuidor, d.jefe_departamento
FROM unc_esq_peliculas.empleado e
    INNER JOIN unc_esq_peliculas.departamento d ON (e.id_departamento = e.id_departamento) AND (e.id_distribuidor = d.id_distribuidor)
    INNER JOIN unc_esq_peliculas.empleado e2 ON (d.jefe_departamento = e2.id_empleado)
WHERE d.id_ciudad IN (SELECT c.id_ciudad
                      FROM unc_esq_peliculas.ciudad c
                      WHERE c.id_pais = 'AR') AND e2.porc_comision > (e.porc_comision * 1.1);

--Consultas que involucran agrupamiento:

--1.7) Indicar la cantidad de películas entregadas a partir del 2010, por género.

SELECT p.genero, count(p.genero) AS "Cantidad"
FROM unc_esq_peliculas.pelicula p
    INNER JOIN unc_esq_peliculas.renglon_entrega re ON p.codigo_pelicula = re.codigo_pelicula
    INNER JOIN unc_esq_peliculas.entrega e ON re.nro_entrega = e.nro_entrega
WHERE (extract(YEAR FROM e.fecha_entrega) > 2010)
GROUP BY p.genero;

--1.8) Realizar un resumen de entregas por día, indicando el video club al cual se le realizó la entrega y la cantidad entregada. Ordenar el resultado por fecha.

SELECT e.fecha_entrega, e.id_video, re.codigo_pelicula, sum(re.cantidad) AS "Cantidad"
FROM unc_esq_peliculas.entrega e
    INNER JOIN unc_esq_peliculas.renglon_entrega re ON e.nro_entrega = re.nro_entrega
GROUP BY e.fecha_entrega, e.id_video, re.codigo_pelicula
ORDER BY e.fecha_entrega, e.id_video;

--1.9) Listar, para cada ciudad, el nombre de la ciudad y la cantidad de empleados mayores de edad que desempeñan tareas en departamentos de la misma y que posean al menos 30 empleados.

SELECT c.nombre_ciudad, count(*)
FROM unc_esq_peliculas.ciudad c
    INNER JOIN unc_esq_peliculas.departamento d ON c.id_ciudad = d.id_ciudad
    INNER JOIN unc_esq_peliculas.empleado e ON d.id_distribuidor = e.id_distribuidor and d.id_departamento = e.id_departamento
WHERE extract(year FROM AGE(e.fecha_nacimiento)) > 18 AND (d.id_distribuidor, d.id_departamento) IN (
    SELECT id_distribuidor, id_departamento
    FROM unc_esq_peliculas.empleado
    WHERE EXTRACT(year FROM AGE(fecha_nacimiento)) > 18
    GROUP BY id_distribuidor, id_departamento
    HAVING count(*) >= 30)
GROUP BY c.nombre_ciudad;
